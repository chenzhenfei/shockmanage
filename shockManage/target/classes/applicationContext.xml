<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd"
	default-lazy-init="true">
	<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />
	<!-- <description>Spring公共配置 </description> -->
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.shock.psm" />
	
	<task:annotation-driven />
	<!-- 数据源配置, 使用druid数据库连接池 -->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.prod.driver}"/>
        <property name="url" value="${jdbc.prod.url}"/>
        <property name="username" value="${jdbc.prod.username}"/>
        <property name="password" value="${jdbc.prod.password}"/>
        <property name="maxActive" value="200"/>
        <!-- 考虑到高并发访问时的服务器资源紧张，从1秒放宽到3秒，modify by xujing -->
        <property name="maxWait" value="3000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="testWhileIdle" value="true"></property>
		<property name="validationQuery" value="select 1"></property>
 	 </bean>
	 
 	<!-- MyBatis配置datasource -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<!-- <property name="typeAliasesPackage" value="com.purang.investMgr.entity" /> -->
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/**/*Mapper.xml" />
		<!-- <property name="configLocation" value="classpath:mybatis/sql-map-config.xml"></property> -->
	</bean>
	
	<mybatis:scan base-package="com.shock.psm.dao" />
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
<!-- 	<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shock.psm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> -->
	
	
	<!-- 事务管理器配置, mybatis单数据源事务 -->
  	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
</beans>

